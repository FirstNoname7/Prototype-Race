using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro; //подключение TеxtMeshPro сюда

public class PlayerController : MonoBehaviour
{
    private Rigidbody playerRb; //вызываем компонент жёсткого тела через переменную rigidBody
    public string inputID; //переменная для определения какого игрока надо перемещать (1 - для первого игрока,2 - для второго игрока.Указывается в инспекторе)
    [SerializeField] float turnSpeed = 20.0f; //переменная для установки скорости машины, когда нажимаешь на стрелки "вправо" и "влево"
    private float horizontalInput; //переменная для установки направления, в котором движется машина по оси Х. Число варьируется от -1 до 1. -1 = едет влево. 1 - едет вправо. Если убрать эту переменную, то машина будет двигаться в одном направлении.
    private float verticalInput; //переменная для установки скорости машины. Число варьируется от -1 до 1. -1 = скорость уменьшается. 1 - скорость увеличивается. Если убрать эту переменную, то машина не будет набирать скорость.
    [SerializeField] private float horsePower = 0; //лошадиные силы для увеличения/уменьшения скорости автомобиля
    [SerializeField] GameObject centerOfMass; //игровой объект - центр машины для вращения вокруг него в случае столкновения машины с препятствием (если убрать, то машина будет переворачиватьсчя на ровном месте)
    [SerializeField] TextMeshProUGUI speedometerText; //тут указан текст скорости для машины
    [SerializeField] float speed; //тут указана скорость, которая будет отображаться в поле "Скорость:"
    [SerializeField] TextMeshProUGUI rpmText; //текст, показывающий сколько оборотов у машины
    [SerializeField] float rpm; //отражает кол-во оборотов

    void Start()
    {
        playerRb = GetComponent<Rigidbody>(); //говорит, что в этом скрипте будет использоваться игровой объект с жёстким телом, то есть с Rigidbody
        playerRb.centerOfMass = centerOfMass.transform.localPosition; //положение точки, вокруг которой вращается игрок = положению игрового объекта из переменной centerOfMass
    }

    // В Update машина будет перемещаться вперёд
    private void Update()
    {

        horizontalInput = Input.GetAxis("Horizontal" + inputID); //установка, что при клике на стрелки "вправо" и "влево" перс (машина) будет двигаться. inputID - показывает, какой именно игрок перемещается, 1-ый или второй.
                                                                 //forwardInput = Input.GetAxis("Vertical");
        verticalInput = Input.GetAxis("Vertical" + inputID);//установка, что при клике на стрелки "вверх" и "вниз" будет меняться скорость машины. inputID - показывает, какой именно игрок перемещается, 1-ый или второй.

        playerRb.AddRelativeForce(Vector3.forward * Time.deltaTime * horsePower  * verticalInput); //движение вперёд. playerRb - использование жёсткого тела. AddRelativeForce - добавляет силы к твердому телу относительно системы его коордианат
                                                                                                  //Vector3.forward - то, что передвигает объект по оси Z (можешь посмотреть, она синей стрелкой выделена в сцене)
                                                                                                  //horsePower - скорость машины. Чем больше число, тем больше скорость. А регулируется скорость пользовательским вводом verticalInput (по клику на стрелки "вверх" и "вниз")
                                                                                                  //rigidBody.velocity = Vector3.forward * speed; //тут устанавливается движение вперёд.
                                                                                                  //rigidBody. - использование жёсткого тела. velocity - говорим, что объект должен двигаться.
                                                                                                  //Vector3.forward - то, что передвигает объект по оси Z (можешь посмотреть, она синей стрелкой выделена в сцене)
                                                                                                  //speed - скорость. Чем больше число, тем больше скорость
        transform.Translate(Vector3.right * Time.deltaTime * turnSpeed * horizontalInput); //тут устанавливаю, что при клике на стрелки "вправо-влево" машина будет перемещаться по горизонтали.
        //transform.Translate - то, что позволяет объекту двигаться. Vector3 - задействовано 3 направления: x,y,z.
        //Vector3.right - то, что передвигает объект по оси Х (можешь глянуть, она выделена в сцене красной стрелкой). Именно right стоит, а не left, потому что так движение будет правильным. Если поставить left, то при клике направо машина поедет налево, а при клике налево машина поедет направо.
        //Time.deltaTime - оптимизация движения, чтоб на разных компах скорость одна и та же была
        //turnSpeed - переменная, находится перед функцией старта. horizontalInput - тоже переменная перед функцией старта.

        speed = Mathf.Round(playerRb.velocity.magnitude * 2.237f); //скорость = Mathf.Round - нужно для того, чтобы округлить число float, а то скорость будет показываться как, например, "1.22434 миль в час".
                                                                  //playerRb - скорость применяется к жёсткому телу. velocity - вектор скорости твердого тела. magnitude - длина вектора.
                                                                  //2.27f - именно это число, потому что скорость отображается в милях в час. Если нужна скорость в км/ч, тогда ставь 3.6f
        speedometerText.SetText("Скорость " + speed + " миль в час"); //скорость, которая будет выводиться на экран в объекте speedometerText

        rpm = Mathf.Round((speed % 30) * 40); //расчёт оборотов в минуту. speed % 30 - скорость делится на число 30, выводится целая часть ответа (например, если делим 31/30, то получится 1.03, выводится 1).
        rpmText.SetText("Обороты: " + rpm); //вывод оборотов в минуту в объекте rpmText
    }
}
